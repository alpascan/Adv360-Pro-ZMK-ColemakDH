#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESCAPE  &kp N1        &kp N2            &kp N3    &kp N4     &kp N5  &kp C_MUTE                                                                              &lt 2 C_BACKLIGHT_TOGGLE  &kp N6  &kp N7  &kp N8     &kp N9    &kp N0         &kp BACKSPACE
&kp TAB     &kp Q         &kp W             &kp F     &kp P      &kp B   &kp LEFT_BRACKET                                                                        &kt RIGHT_BRACKET         &kp J   &kp L   &kp U      &kp Y     &kp SEMICOLON  &kp BSLH
&kp LCTRL   &kp A         &kp R             &kp S     &kp T      &kp G   &kp MINUS         &kp LCTRL     &kp BACKSPACE         &kp DELETE         &kp RCTRL      &kt MINUS                 &kp M   &kp N   &kp E      &kp I     &kp O          &kp SQT
&kp LSHFT   &kp Z         &kp X             &kp C     &kp D      &kp V                                   &kp LEFT_SHIFT        &kp RIGHT_SHIFT                                             &kp K   &kp H   &kp COMMA  &kp DOT   &kp FSLH       &kp RSHFT
&kp GRAVE   &kp LEFT_ALT  &kp LEFT_COMMAND  &kp LEFT  &kp RIGHT          &lt 1 SPACE       &kp LEFT_ALT  &kp LEFT_COMMAND      &kp RIGHT_COMMAND  &kp RIGHT_ALT  &lt 1 ENTER                       &kp UP  &kp DOWN   &kp LBKT  &kp RBKT       &kp DELETE
            >;
        };

        keypad {
            bindings = <
&trans  &kp F1         &kp F2        &kp F3                &kp F4                &kp F5         &kp F6                                                 &kp F7       &kp F8           &kp F9           &kp F10       &kp F11     &kp KP_MULTIPLY  &trans
&trans  &kp HOME       &kp UP_ARROW  &kp END               &kp PAGE_UP           &kp INSERT     &kt C_VOLUME_UP                                        &bootloader  &kp KP_MULTIPLY  &kp KP_N7        &kp KP_N8     &kp KP_N9   &kp KP_MINUS     &trans
&trans  &kp LEFT       &kp DOWN      &kp RIGHT             &kp PAGE_DOWN         &kp CAPSLOCK   &kt C_VOLUME_DOWN  &trans  &trans      &trans  &trans  &kp C_POWER  &kp KP_SLASH     &kp KP_N4        &kp KP_N5     &kp KP_N6   &kp KP_MINUS     &trans
&trans  &kp C_AC_UNDO  &kp C_AC_CUT  &kp C_AC_COPY         &kp C_AC_PASTE        &kp LC(LG(V))                             &trans      &trans                       &kp KP_NUM       &kp KP_N1        &kp KP_N2     &kp KP_N3   &kp KP_EQUAL     &trans
&trans  &trans         &trans        &kp C_BRIGHTNESS_DEC  &kt C_BRIGHTNESS_INC                 &trans             &trans  &trans      &trans  &trans  &trans                        &kp KP_NUMBER_0  &kp KP_COMMA  &kp KP_DOT  &kp KP_ENTER     &trans
            >;
        };

        ADV_360_STUFF {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
